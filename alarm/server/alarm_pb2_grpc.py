# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import server.alarm_pb2 as alarm__pb2


class AlarmStoreStub(object):
    """Service to perform alarm operations
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.DeleteAlarm = channel.unary_unary(
                '/alarm.AlarmStore/DeleteAlarm',
                request_serializer=alarm__pb2.Alarm.SerializeToString,
                response_deserializer=alarm__pb2.ActionResponse.FromString,
                )
        self.UpdateAlarm = channel.unary_unary(
                '/alarm.AlarmStore/UpdateAlarm',
                request_serializer=alarm__pb2.Alarm.SerializeToString,
                response_deserializer=alarm__pb2.ActionResponse.FromString,
                )
        self.ListAlarms = channel.unary_stream(
                '/alarm.AlarmStore/ListAlarms',
                request_serializer=alarm__pb2.ListAlarmsParams.SerializeToString,
                response_deserializer=alarm__pb2.ActionResponse.FromString,
                )
        self.CreateAlarm = channel.unary_unary(
                '/alarm.AlarmStore/CreateAlarm',
                request_serializer=alarm__pb2.Alarm.SerializeToString,
                response_deserializer=alarm__pb2.ActionResponse.FromString,
                )


class AlarmStoreServicer(object):
    """Service to perform alarm operations
    """

    def DeleteAlarm(self, request, context):
        """Deletes an alarm specified by a key
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateAlarm(self, request, context):
        """Updates a given alarm
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAlarms(self, request, context):
        """Lists all alarms stored
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateAlarm(self, request, context):
        """Creates a new alarm
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AlarmStoreServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'DeleteAlarm': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAlarm,
                    request_deserializer=alarm__pb2.Alarm.FromString,
                    response_serializer=alarm__pb2.ActionResponse.SerializeToString,
            ),
            'UpdateAlarm': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateAlarm,
                    request_deserializer=alarm__pb2.Alarm.FromString,
                    response_serializer=alarm__pb2.ActionResponse.SerializeToString,
            ),
            'ListAlarms': grpc.unary_stream_rpc_method_handler(
                    servicer.ListAlarms,
                    request_deserializer=alarm__pb2.ListAlarmsParams.FromString,
                    response_serializer=alarm__pb2.ActionResponse.SerializeToString,
            ),
            'CreateAlarm': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAlarm,
                    request_deserializer=alarm__pb2.Alarm.FromString,
                    response_serializer=alarm__pb2.ActionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'alarm.AlarmStore', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AlarmStore(object):
    """Service to perform alarm operations
    """

    @staticmethod
    def DeleteAlarm(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/alarm.AlarmStore/DeleteAlarm',
            alarm__pb2.Alarm.SerializeToString,
            alarm__pb2.ActionResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateAlarm(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/alarm.AlarmStore/UpdateAlarm',
            alarm__pb2.Alarm.SerializeToString,
            alarm__pb2.ActionResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListAlarms(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/alarm.AlarmStore/ListAlarms',
            alarm__pb2.ListAlarmsParams.SerializeToString,
            alarm__pb2.ActionResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateAlarm(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/alarm.AlarmStore/CreateAlarm',
            alarm__pb2.Alarm.SerializeToString,
            alarm__pb2.ActionResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
